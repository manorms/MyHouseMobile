/*
 * Please see the included README.md file for license terms and conditions.
 */


// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.

var url = "http://apirest.alpha-soluciones.com/api/v1/";

var push;
var pushOptions = { "android": {"senderID": "655713364128"}};



function onAppReady() {
    if( navigator.splashscreen && navigator.splashscreen.hide ) {   // Cordova API detected
        navigator.splashscreen.hide() ;
    }
    var connection = checkConnection();
    if(connection == 'No hay conección a internet'){
        alert(connection);
        navigator.app.exitApp();
    }
    else{
       
    }
    
}
document.addEventListener("app.Ready", onAppReady, false) ;
// document.addEventListener("deviceready", onAppReady, false) ;
// document.addEventListener("onload", onAppReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.

Number.prototype.formatMoney = function(c, d, t){
var n = this, 
    c = isNaN(c = Math.abs(c)) ? 2 : c, 
    d = d == undefined ? "." : d, 
    t = t == undefined ? "," : t, 
    s = n < 0 ? "-" : "", 
    i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "", 
    j = (j = i.length) > 3 ? j % 3 : 0;
   return s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
 };

document.addEventListener("resume",function(e){    
    connection = checkConnection();
    if(connection == 'No hay conección a internet'){
        alert(connection);
        navigator.app.exitApp();
    }
},false);
//internet status
function checkConnection() {
    var networkState = navigator.connection.type;
    
    var states = {};
    states[Connection.UNKNOWN]  = 'Conección desconocida';
    states[Connection.ETHERNET] = 'Conección Ethernet';
    states[Connection.WIFI]     = 'Conección WiFi';
    states[Connection.CELL_2G]  = 'Conección 2G';
    states[Connection.CELL_3G]  = 'Conección 3G';
    states[Connection.CELL_4G]  = 'Conección 4G';
    states[Connection.CELL]     = 'Conección generica';
    states[Connection.NONE]     = 'No hay conección a internet';

    return states[networkState];
}



//post headers
  var __configPost = {
     headers : {
         'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8;'
     },
     transformRequest: function(obj) {
         var str = [];
         for (var key in obj) {
             if (obj[key] instanceof Array) {
                 for(var idx in obj[key]){
                     var subObj = obj[key][idx];
                     for(var subKey in subObj){
                         str.push(encodeURIComponent(key) + "[" + idx + "][" + encodeURIComponent(subKey) + "]=" + encodeURIComponent(subObj[subKey]));
                     }
                 }
             }
             else {
                 str.push(encodeURIComponent(key) + "=" + encodeURIComponent(obj[key]));
             }
         }
         return str.join("&");
     }
 }

//Angular App
angular.module('app', ['onsen', 'angular-loading-bar', 'ngAnimate'])
    .config(['cfpLoadingBarProvider', function(cfpLoadingBarProvider) {
        cfpLoadingBarProvider.includeSpinner = false;
//        cfpLoadingBarProvider.includeBar = true;
        
    }])
    .directive('ngEnter', function () {
        return function (scope, elements, attrs) {
            elements.bind('keydown keypress', function (event) {
                if (event.which === 13) {
                    scope.$apply(function () {
                        scope.$eval(attrs.ngEnter);
                    });
                    event.preventDefault();
                }
            });
        };
    })
.filter('total', ['$parse', function ($parse) {
    return function (input, property) {
        var i = input instanceof Array ? input.length : 0,
            p = $parse(property);

        if (typeof property === 'undefined' || i === 0) {
            return i;
        } else if (isNaN(p(input[0]))) {
            throw 'filter total can count only numeric values';
        } else {
            var total = 0;
            while (i--)
                total += parseFloat(p(input[i]));
            return "$ " + total.formatMoney(2, '.', ',');
        }
    };
}]);


angular.module('app')
    .controller('UserController', function($scope,$http) {
        $scope.user = {};
        $scope.user.id = "";
        $scope.user.username = "";
        $scope.user.password = "";
        $scope.user.device_id = "";
        $scope.user.uuid = "";
    
        $scope.users = [];
        
        $scope.loans = [];
        $scope.loans.myLoans = {};
        $scope.loans.yourLoans = {};
    
        $scope.loan = [];
        $scope.loan.new = [];
        $scope.loan.new.borrower_id = "";
        $scope.loan.new.description = "";
        $scope.loan.new.amount = "";
        $scope.loan.new.date = "";
    
        $scope.payment = [];
        $scope.payment.new = [];
        $scope.payment.new.loan_id = "";
        $scope.payment.new.comments = "";
        $scope.payment.new.date = "";
        $scope.payment.new.amount = "";
    
    
        
        $scope.savings = [];
    
        $scope.saving = {};
        $scope.saving.new = [];
        $scope.saving.new.comments = "";
        $scope.saving.new.date = "";
    
    
        $scope.deposit = {};
        $scope.deposit.new = [];
        $scope.deposit.new.type='';
        $scope.deposit.new.saving_id='';
        $scope.deposit.new.amount = '';
        $scope.deposit.new.comments = '';
        $scope.deposit.new.date = '';    
    
    
        $scope.expenses = {};
        $scope.expenses.myTotal = [];
        $scope.expenses.myExpenses = [];
        $scope.expenses.yourExpenses = [];
    
    
        $scope.db = [];
        $scope.dialogs = {};
    
        $scope.user_loaded = {};
    
    
    
    
        ons.ready(function() {
            

              $scope.show = function(dlg) {
                if (!$scope.dialogs[dlg]) {
                  ons.createDialog(dlg).then(function(dialog) {
                    $scope.dialogs[dlg] = dialog;
                    dialog.show();
                  });
                } else {
                  $scope.dialogs[dlg].show();
                }
              }
            $scope.db = createTable();
            user = {};
            var q = "SELECT * FROM user";
            $scope.db.transaction(function (t) {
                t.executeSql(q, null, function (t, data) {
                    //alert('length ' + data.rows.length);
                    if(data.rows.length>=1){
                        $scope.user = {id: data.rows.item(0).user_id, username: data.rows.item(0).email, password: data.rows.item(0).password, device_id: data.rows.item(0).device_id, uuid: data.rows.item(0).uuid};
                        $scope.loginDB();
                        app.menu.setSwipeable(true);  
                        
                    }
                    else{/*
                        push = PushNotification.init(pushOptions);
                        push.on('registration', function(data) {
                        $scope.user.device_id  = data.registrationId;
                            console.log(data);
                            // data.registrationId
                        });
                        
                        push.on('notification', function(data) {
                            // data.message,
                            // data.title,
                            // data.count,
                            // data.sound,
                            // data.image,
                            // data.additionalData
                        });
                        
                        push.on('error', function(e) {
                            alert(e.message);
                        });
                        $scope.user.uuid = device.uuid;*/
                    }
                });
            });

            
            
            $scope.prompt = function(material) {

                var mod = material ? 'material' : undefined;
                ons.notification.prompt({
                    cancelable: true,
                    buttonLabel: "Enviar",
                    title: "Recuperar Contraseña",
                    message: "Ingresa tu Email",
                    modifier: mod,
                    callback: function(email) {
                        email = escape(email.trim().toLowerCase());
                        if(email!=""){
                            $http.get(url + 'users/password/' + email).then(
                            function(response) {
                                console.log(response);

                                ons.notification.alert({
                                    message: response.data.message,
                                    modifier: mod
                                });
                            }, 
                            function(response) {
                                ons.notification.alert({
                                    message: "Error, intenta de nuevo",
                                    modifier: mod
                                });

                            }
                            );
                        }
                    }
                });
            }
            
            
            
            
            $scope.getUsers = function(){
                $http.get(url + 'users').then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status != 1){
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });  
                        }
                        else{
                            $scope.users = response.data.users;
                        }
                    }, 
                    function(response) {
                        ons.notification.alert({
                            message: "Error al cargar usuarios, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
            
            
            
            
            $scope.readUser = function(user_id){
                
                $http.get(url + 'users/' + user_id).then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status == 1){
                            
                            app.navi.pushPage('page1.html');
                            app.menu.setSwipeable(true);
                            
                            $scope.user_loaded = response.data.user;
                            $scope.user_loaded.notifications = $scope.user_loaded.notifications == "1";
                            $scope.user_loaded.notifications_app = $scope.user_loaded.notifications_app == "1";
                            $scope.getLoans();
                            $scope.getSavings();
                            $scope.getUsers();
                            $scope.getExpenses();
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });  
                        }
                    }, 
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
            
            $scope.login = function(){
                
                $scope.user.username = $scope.user.username.trim().toLowerCase();
                if($scope.user.username != "" && $scope.user.password != ""){
                    push = PushNotification.init(pushOptions);
                    push.on('registration', function(data) {
                        $scope.user.device_id  = data.registrationId;
                        console.log(data);
                        $scope.user.uuid = device.uuid;
                    
                    $http.post(url + 'users/auth', $scope.user, __configPost).then(
                        
                        function(response) {
console.log("LOGIN - auth");
                        console.log(response.data);
                            if(response.data.status == 1){
                                app.menu.setSwipeable(true);
                                db = createTable();
                                $scope.user.id = response.data.user_id;
                                insert($scope.db, $scope.user);
                                
                                $scope.readUser( response.data.user_id);
                            }
                            else{
                                console.log(response);
                                    ons.notification.alert({
                                    message: response.data.message,
                                    modifier: 'material'
                                });
                            }
                        }, 
                        function(response) {
                            ons.notification.alert({
                                message: "Error, intenta de nuevo",
                                modifier: 'material'
                            });
                        }
                    );
                        // data.registrationId
                    });

                    push.on('notification', function(data) {
                        //alert("LOGIN");
                        //alert(data);
                        // data.message,
                        // data.title,
                        // data.count,
                        // data.sound,
                        // data.image,
                        // data.additionalData
                        //$scope.getLoans();
                        
                    });

                    push.on('error', function(e) {
                        alert(e.message);
                    });
                    
                    
                }
            }
            
            
            
            $scope.loginDB = function(){
                console.log("loginDB");
                $http.post(url + 'users/auth', $scope.user, __configPost).then(
                    function(response) {
                        if(response.data.status == 1){
                            $scope.readUser( $scope.user.id);
                        }
                        else{
                            console.log(response);
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    }, 
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
        
            
            
            
            

            $scope.setNotification = function(){
                data = {'notifications':$scope.user_loaded.notifications, 'notifications_app': $scope.user_loaded.notifications_app};
                console.log(data);
                console.log($scope.user_loaded);
                $http.put(url + 'users/' + $scope.user_loaded.id , data, __configPost).then(
                    function(response) {
                        console.log(response);
                        if(response.data.status != 1){
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });

                    }   
                );
            }
            
            $scope.sendState = function(){
                app.menu.closeMenu()
                 $http.get(url + 'loans/state/' + $scope.user_loaded.id).then(
                    function(response) {
                        ons.notification.alert({
                            message: response.data.message,
                            modifier: 'material'
                        });
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                
            }
            
            $scope.logout = function(){
                app.menu.closeMenu()
                 $http.put(url + 'users/logout/' + $scope.user_loaded.id, {'uuid': device.uuid}, __configPost).then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status == 1){
                            push = PushNotification.init(pushOptions);
                        
                            push.unregister(function() {
                                console.log('unregister success');
                            }, function() {
                                console.log('unregister error');
                            });
                            $scope.user = {};
                            $scope.user.id = "";
                            $scope.user.username = "";
                            $scope.user.password = "";
                            $scope.user.device_id = "";
                            $scope.user.uuid = "";
                            $scope.user_loaded = [];
                            $scope.loans = [];
                            $scope.loans.myLoans = {};
                            $scope.loans.yourLoans = {};
                            
                            clearTable($scope.db);
                            
                            app.navi.popPage();
                            app.menu.setSwipeable(false);
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                
            }
            
            $scope.load = function(){
                $scope.getLoans();
                $scope.getSavings();    
            }
            
            
            
            $scope.getLoans = function(){
                $http.get(url + 'loans/' + $scope.user_loaded.id).then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status == 1){
                            $scope.loans.myLoans = response.data.data.myLoans;
                            $scope.loans.yourLoans = response.data.data.yourLoans;
                            console.log($scope.loans);
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
            
            
            $scope.getSavings = function(){
                $http.get(url + 'savings/' + $scope.user_loaded.id).then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status == 1){
                            $scope.savings = response.data.data;
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
            $scope.deleteSaving = function($id){
                
                ons.notification.confirm({
                  title: 'Confirmar',
                  message: 'Estas seguro de eliminar este ahorro?',
                  modifier: 'material',
                  buttonLabels: ['Si', 'Cancelar'],
                  callback: function(idx) {
                    switch (idx) {
                      case 0:
                        $http.delete(url + 'savings/' + $id).then(
                            function(response) {
                                console.log(response.data);
                                if(response.data.status == 1){
                                    $scope.getSavings();
                                }
                                else{
                                    ons.notification.alert({
                                        message: response.data.message,
                                        modifier: 'material'
                                    });
                                }
                            },
                            function(response) {
                                ons.notification.alert({
                                    message: "Error, intenta de nuevo",
                                    modifier: 'material'
                                });
                            }
                        );
                        break;
                      case 1:
                        break;
                    }
                  }
                });
            }
            
            $scope.newSaving = function(_dialog){
                if($scope.saving.new.comments != ''){
                data = {
                  user_id: $scope.user_loaded.id,
                  comments: $scope.saving.new.comments,
                  date: $scope.saving.new.date
                };
                $http.post(url + 'savings', data, __configPost).then(
                    function(response) {
                        console.log(response);
                        if(response.data.status == 1){
                            $scope.getSavings();
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                $scope.saving.new.comments = "";
                $scope.saving.new.date = "";
                _dialog.hide();
                }
                else{
                   ons.notification.alert({
                        title: "Alerta",
                        message: "La descripción es requirida",
                        modifier: 'material'
                    }); 
                }
            }
            
            
            
            
            $scope.deleteLoan = function($id){
                
                ons.notification.confirm({
                  title: 'Confirmar',
                  message: 'Estas seguro de eliminar este prestamo?',
                  modifier: 'material',
                  buttonLabels: ['Si', 'Cancelar'],
                  callback: function(idx) {
                    switch (idx) {
                      case 0:
                        $http.delete(url + 'loans/' + $id).then(
                            function(response) {
                                console.log(response.data);
                                if(response.data.status == 1){
                                    $scope.getLoans();
                                }
                                else{
                                    ons.notification.alert({
                                        message: response.data.message,
                                        modifier: 'material'
                                    });
                                }
                            },
                            function(response) {
                                ons.notification.alert({
                                    message: "Error, intenta de nuevo",
                                    modifier: 'material'
                                });
                            }
                        );
                        break;
                      case 1:
                        break;
                    }
                  }
                });
            }
            
            
            
            $scope.newLoan = function(_dialog){
                if($scope.loan.new.amount > 0){
                $scope.loan.new.amount = parseFloat($scope.loan.new.amount);
                $scope.loan.new.amount = Math.abs($scope.loan.new.amount).toFixed(2);
                }else{
                    ons.notification.alert({
                        title: "Alerta",
                        message: "La cantidad es requirida y mayor a 0",
                        modifier: 'material'
                    });
                    return;
                }
                
                
                if(!$scope.loan.new.borrower_id){
                    ons.notification.alert({
                        title: "Alerta",
                        message: "Usuario Obligatorio",
                        modifier: 'material'
                    });
                  return;

                }
                
                if($scope.loan.new.description != ''){
                data = {
                  lender_id: $scope.user_loaded.id,
                  borrower_id: $scope.loan.new.borrower_id,
                  description: $scope.loan.new.description,
                  amount: $scope.loan.new.amount,
                  date: $scope.loan.new.date
                };
                    console.error('save Loan');
                console.log(data);
                $http.post(url + 'loans', data, __configPost).then(
                    function(response) {
                        console.log(response);
                        if(response.data.status == 1){
                            $scope.getLoans();
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                  $scope.loan.new.borrower_id = "";
                  $scope.loan.new.description = "";
                  $scope.loan.new.amount = "";
                  $scope.loan.new.date = "";
                  _dialog.hide();
                }
                else{
                   ons.notification.alert({
                        title: "Alerta",
                        message: "La descripción es requirida",
                        modifier: 'material'
                    }); 
                }
            }
            
            $scope.newDeposit = function(_dialog){
                console.log(typeof($scope.deposit.new.amount))
                if($scope.deposit.new.amount > 0){
                $scope.deposit.new.amount = parseFloat($scope.deposit.new.amount);
                $scope.deposit.new.amount = Math.abs($scope.deposit.new.amount).toFixed(2);
                if($scope.deposit.new.type!="deposit"){
                    $scope.deposit.new.amount = $scope.deposit.new.amount * -1;
                }
                data = {
                  comments: $scope.deposit.new.comments,
                  date: $scope.deposit.new.date,
                  saving_id: $scope.deposit.new.saving_id,
                  amount: $scope.deposit.new.amount
                };
                $http.post(url + 'savings/deposits', data, __configPost).then(
                    function(response) {
                        console.log(response);
                        if(response.data.status == 1){
                            $scope.getSavings();
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                $scope.deposit.new.type='';
                $scope.deposit.new.saving_id='';
                $scope.deposit.new.amount = '';
                $scope.deposit.new.comments = '';
                $scope.deposit.new.date = '';
                _dialog.hide();
                }
                else{
                    ons.notification.alert({
                        title: "Alerta",
                        message: "La cantidad es requirida y mayor a 0",
                        modifier: 'material'
                    });
                }
                    
            }
            
            
            
            
            
            $scope.newPayment = function(_dialog){
                if($scope.payment.new.amount > 0){
                
                $scope.payment.new.amount = parseFloat($scope.payment.new.amount);

                $scope.payment.new.amount = Math.abs($scope.payment.new.amount).toFixed(2);
                
                data = {
                  comments: $scope.payment.new.comments,
                  date: $scope.payment.new.date,
                  loan_id: $scope.payment.new.loan_id,
                  amount: $scope.payment.new.amount
                };
                console.log(data);
                $http.post(url + 'loans/payments', data, __configPost).then(
                    function(response) {
                        console.log(data);
                        console.error("save payment");
                        console.log(response);
                        if(response.data.status == 1){
                            $scope.getLoans();
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
                $scope.payment.new.loan_id = "";
                $scope.payment.new.comments = "";
                $scope.payment.new.date = "";
                $scope.payment.new.amount = "";
                    
                _dialog.hide();
                }
                else{
                    ons.notification.alert({
                        title: "Alerta",
                        message: "La cantidad es requirida y mayor a 0",
                        modifier: 'material'
                    });
                }
                    
            }
            
            
        
            $scope.getExpenses = function(){
                $http.get(url + 'expenses/' + $scope.user_loaded.id).then(
                    function(response) {
                        console.log(response.data);
                        if(response.data.status == 1){
                            $scope.expenses.myTotal = response.data.data.myTotal;
                            $scope.expenses.myExpenses = response.data.data.myExpenses;
                            $scope.expenses.yourExpenses = response.data.data.yourExpenses;
                           
                            console.log($scope.expenses);
                        }
                        else{
                            ons.notification.alert({
                                message: response.data.message,
                                modifier: 'material'
                            });
                        }
                    },
                    function(response) {
                        ons.notification.alert({
                            message: "Error, intenta de nuevo",
                            modifier: 'material'
                        });
                    }
                );
            }
            
            
            
            
            
            
            
            
            
            
            
        });
    });





///database
            
            
function getopenDb() { 
    //alert('getopenDb');
    try {
        if (window.openDatabase) {
            return window.openDatabase;                 
        } else {
            alert('No HTML5 support');
            return undefined;
        }
    }
    catch (e) {
        alert(e);
        return undefined;
    } 
}
            
            
function createTable() {
    //alert('createTable');
    var openDB = getopenDb();
    if(!openDB)
    {         
        alert("error");
        return;               
    }
    else
    {
        db = openDB('myhouse', '1.0', 'my db', 2*1024*1024);
        db.transaction(function (t) { 
        t.executeSql('CREATE TABLE IF NOT EXISTS user(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, user_id TEXT NOT NULL, email TEXT NOT NULL, password TEXT NOT NULL, uuid TEXT NOT NULL, device_id TEXT NOT NULL);', [], null, null);               

    });
    return db;
    }            
}
            
            
function insert(db,user) {
    //alert('insert');
    if(!db)
    {       
        alert("error insert");
        return;                
    }
    
    db.transaction(function (t) { 
        t.executeSql("INSERT INTO user('user_id', 'email', 'password', 'uuid', 'device_id') VALUES('" + user.id + "','" + user.username + "','" + user.password + "','" + user.uuid + "','" + user.device_id + "');", [], null, null);
        //alert("Row Inserted!");
    });
    console.log("INSERT");
            console.log(user);
    
}
function clearTable(db) {
    //alert('insert');
    if(!db)
    {       
        alert("error delete");
        return;                
    }
    db.transaction(function (t) { 
        t.executeSql("DELETE FROM user;", [], null, null);
       // alert("deleted!");
    });
    
}
            
            
function select(db) {
    
    var q = "SELECT * FROM user";
    db.transaction(function (t) {
        t.executeSql(q, null, function (t, data) {
            //alert('length ' + data.rows.length);
            console.log(data.rows);
            if(data.rows.length>=1){
                //alert('result ' + data.rows.item(0).email);
                //loginDB(data.rows.item(0).user_id, data.rows.item(0).email,data.rows.item(0).password);
                return {id: data.rows.item(0).user_id, username: data.rows.item(0).email, password: data.rows.item(0).password, device_id: data.rows.item(0).device_id, uuid: data.rows.item(0).uuid};
            }
//            else
//                __notificationsRegister();
        });
    });
    return {};
}